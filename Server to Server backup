# remote file transfer using NFS share and  a service user account to facilite the share

##############
configure NFS share on server SMB10
#############

systemctl enable --now rpcbind nfs-server
firewall-cmd --add-service=nfs --permanent
firewall-cmd --reload


###############
configure 'backup' service account on server SMB10 to let server LAMP10 access resources
###############

# create a system account (-r) with no home directory (-M) and no login shell (-s)
useradd -Mrs /bin/false backup
# run 'id' command and make note of the UID of the account created.
id backup


# add the share configuration to the /etc/exports file
vim /etc/exports
# spacing an order are very important in the follow file syntax
# insert the following. two acls allowing the lamp10.corp.515support.com server read-write access and hosts on the 10.1.16.0/24 network read-only access. all_scquash causes client users to be mapped to the anonymous or nobody user id on the server. and anonuid an anonguid set the ID of the nobody user to the backup account that was configured
/srv/nfs/backup lamp10.corp.515support.com(wr,all_squash,anonuid=983,anonguid=983) 10.1.16.0/24 ro,all_squash,anonuid=983,anonguid=983
ESC :wq

# configure the share directory with the backup account as the owner:
mkdir -p /srv/nfs/backup
chown -R backup:backup /svr/nfs/backup
chmod 0770 /srv/nfs/backup

# update the configuration
exportfs -ra

##############
Configure the NFS client server
##############

# Mount the share on LAMP10.  By default only root user can mount file systems.  Create a special entry in /etc/fstab using Putty or the terminal so that the the smb10 server can mount the share
# first backup the file with .old or .org etc.
sudo cp /etc/fstab /etc/fstab.org
# add the following to the last line of the file (type Go)
sudo vim /etc/fstab
smb10:/srv/nfs/backup /usr/backup nfs rw/user/noauto 0 0
ESC :wq

# create mount point and mount the share
sudo mkdir -p /usr/backup
mount /usr/backup
